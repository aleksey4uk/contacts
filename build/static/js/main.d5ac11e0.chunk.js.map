{"version":3,"sources":["components/swapi-service-context/index.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/index.js","store.js","components/hoc/hoc-swapi-service.js","components/login/login.js","components/login/index.js","components/pages/login.js","components/edit-contact/edit-contact.js","components/edit-contact/index.js","components/search-panel/search-panel.js","components/search-panel/index.js","components/contacts/contacts.js","components/contacts/index.js","components/pages/home.js","components/app/index.js","components/app/app.js","index.js","services/swapi-service.js"],"names":["createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","ErrorIndicator","ErrorBoundry","state","error","this","setState","console","log","props","children","Component","initialState","contacts","editContact","searchContacts","users","loading","login","reducer","action","type","payload","idx","findIndex","item","name","username","password","target","id","value","number","email","idxV","idxC","key","slice","actionType","toLowerCase","includes","searchValues","idxRemove","searchContIdx","filter","length","store","createStore","hocSwapiServiceContext","Comp","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","values","getUsers","then","res","onLoadUsers","onLogin","to","className","initialValues","remember","onFinish","loadUsers","onFinishFailed","errorInfo","Item","label","rules","required","message","Password","valuePropName","htmlType","connect","dispatch","Logins","EditContact","actionName","classes","edit","title","style","width","onChange","e","editContactItem","placeholder","prefix","UserOutlined","onClick","editComplete","editContactCancel","Search","Input","SearchPanel","search","enterButton","size","onSearch","Contacts","getData","load","complete","data","columns","dataIndex","render","text","record","marginRight","remove","block","add","dataSource","HomePage","App","path","component","SwapiService","tags","Promise","resolve","reject","setTimeout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d5ac11e0.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst {\n  Provider: SwapiServiceProvider,\n  Consumer: SwapiServiceConsumer } = createContext();\n\nexport {\n  SwapiServiceProvider,\n  SwapiServiceConsumer\n}\n","import ErrorIndicator from './error-indicator';\nexport default ErrorIndicator;\n","import React from 'react';\n\nconst ErrorIndicator = () => {\n  return <h3>Произошла ошибка...</h3>\n}\n\nexport default ErrorIndicator;\n","import ErrorBoundry from './error-boundry';\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundry extends Component {\n\n  state = {\n    error: false,\n  }\n\n  componentDidCatch(error) {\n    this.setState({error: true})\n    console.log('Произошла ошибка рендеринга: ', error)\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorIndicator />\n    }\n    return this.props.children;\n  }\n}\n","const initialState = {\n  contacts: [],\n  editContact: null,\n  searchContacts: [],\n  users:[],\n  loading: null,\n  login: null,\n}\n\nconst reducer = (state=initialState, action) => {\n  switch (action.type) {\n    case 'LOAD':\n      return {\n        ...state,\n        contacts: action.payload,\n        loading: true};\n\n    case 'COMPLETE':\n      return {\n        ...state,\n        contacts: state.contacts,\n        loading: false,\n      }\n\n    case 'ON-LOGIN-LOAD':\n      return {\n        ...state,\n        loading: true,\n        users: action.payload,\n      }\n\n    case 'ON-LOGIN':\n      let idx = state.users.findIndex((item) => item.name === action.payload.username && item.password === action.payload.password);\n      if (idx !== -1) {\n        return {\n          ...state,\n          loading: false,\n          login: true,\n        }\n      }\n      return {\n        ...state,\n        login: false,\n        loading: false,\n      }\n\n    case 'EDIT-CONTACT':\n      let idxContact = state.contacts.findIndex(item=>item.name == action.payload.name);\n      return {\n        ...state,\n        editContact: action.payload,\n      }\n\n    case 'EDIT-CONTACT-ITEM':\n      let name = action.payload.target.id === 'name' ? action.payload.target.value : state.editContact.name;\n      let number = action.payload.target.id === 'number' ? action.payload.target.value : state.editContact.number;\n      let email = action.payload.target.id === 'email' ? action.payload.target.value : state.editContact.email;\n\n      return {\n        ...state,\n        editContact: {\n          ...state.editContact,\n          name,\n          number,\n          email,\n        }\n      }\n\n    case 'EDIT-CONTACT-COMPLETE':\n      let idxC = state.contacts.findIndex(item=>item.key == state.editContact.key);\n      let idxV;\n      if(state.searchContacts.findIndex((item) => item.key == state.editContact.key) != -1) {\n        idxV = state.searchContacts.findIndex((item) => item.key == state.editContact.key)\n        return {\n          ...state,\n          contacts: [\n            ...state.contacts.slice(0, idxC),\n          state.editContact,\n            ...state.contacts.slice(idxC+1)\n          ],\n          searchContacts: [\n            ...state.searchContacts.slice(0, idxV),\n            state.editContact,\n            ...state.searchContacts.slice(idxV +1)\n          ],\n          editContact: null,\n        }\n      }\n\n      if(state.editContact.actionType === 'ADD') {\n        if(!state.editContact.number || !state.editContact.name) {\n           return {\n            ...state,\n            editContact: null,\n          }\n        }\n        if(state.editContact.name.toLowerCase().includes(state.searchValues.toLowerCase())) return {\n          ...state,\n          contacts: [\n            ...state.contacts,\n            state.editContact\n          ],\n          searchContacts: [\n            ...state.searchContacts,\n            state.editContact\n          ],\n          editContact: null\n        }\n\n        return {\n          ...state,\n          contacts: [\n            ...state.contacts,\n            state.editContact\n          ],\n          editContact: null\n        }\n      }\n\n      return {\n        ...state,\n        contacts: [\n          ...state.contacts.slice(0, idxC),\n        state.editContact,\n          ...state.contacts.slice(idxC+1)\n        ],\n        editContact: null,\n      }\n\n    case 'EDIT-CONTACT-REMOVE':\n      const idxRemove = state.contacts.findIndex(item=>item.name==action.payload.name);\n      let searchContIdx = null;\n      if(state.searchContacts.findIndex(item=>item.name == action.payload.name) != -1) searchContIdx = state.searchContacts.findIndex(item=>item.name == action.payload.name);\n      return {\n        ...state,\n        contacts: [\n          ...state.contacts.slice(0, idxRemove),\n          ...state.contacts.slice(idxRemove+1)\n        ],\n        searchContacts: [\n          ...state.searchContacts.slice(0, searchContIdx),\n          ...state.searchContacts.slice(searchContIdx + 1),\n        ]\n      }\n    case 'EDIT-CONTACT-CANCEL':\n      return {\n        ...state,\n        editContact: null,\n      }\n\n    case 'SEARCH-CONTACTS':\n      return {\n        ...state,\n        searchValues: action.payload,\n        searchContacts: [\n          ...state.contacts.filter((item) => item.name.toLowerCase().includes(action.payload.toLowerCase()) || item.number.includes(action.payload)),\n        ]\n      }\n\n    case 'ADD-CONTACT':\n      return {\n        ...state,\n        editContact: {\n          ...state.editContact,\n          key: state.contacts.length + 1,\n          actionType: 'ADD'\n        }\n      }\n\n    default: return state;\n  }\n}\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from './reducers'\n\nconst store = createStore(reducer);\nexport {store};\n","import React from 'react';\nimport { SwapiServiceConsumer } from '../swapi-service-context';\n\nconst hocSwapiServiceContext = (Comp) => (props) => {\n    return (\n      <SwapiServiceConsumer>\n        {\n          (value) => <Comp {...props} value={value} />\n        }\n      </SwapiServiceConsumer>\n    )\n  }\n\nexport default hocSwapiServiceContext;\n","import { Form, Input, Button, Checkbox } from 'antd';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport hocSwapiServiceContext from '../hoc/hoc-swapi-service';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nclass Login extends Component {\n\n  loadUsers(values) {\n    //1. Запускаем загрузку\n    const {getUsers} = this.props.value;\n    getUsers()\n      .then((res) => this.props.onLoadUsers(res))\n      .then(() => this.props.onLogin(values))\n  }\n\n  render() {\n    const { props } = this;\n    const onFinish = values => this.loadUsers(values);\n    const onFinishFailed = errorInfo => console.log('Failed:', errorInfo);\n    let pass;\n    if(props.login===false) pass = (<p>Не верный пароль</p>);\n    if(props.loading) return <h1>Загрузка...</h1>\n    if(props.login) return <Redirect to='/' />;\n\n    return (\n      <div className=\"forms\">\n        <Form\n          {...layout}\n          name=\"basic\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your username!',\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLoadUsers: (payload) => dispatch({type: 'ON-LOGIN-LOAD', payload}),\n    onLogin: (payload) => dispatch({type: 'ON-LOGIN', payload})\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(hocSwapiServiceContext(Login));\n//\n","import Login from './login';\nexport default Login;\n","import React from 'react';\nimport Login from '../login';\n\nconst Logins = () => {\n  return <Login />\n}\n\nexport default Logins;\n","import React, { Component } from 'react';\nimport './edit-contact.css';\nimport { connect } from 'react-redux';\nimport { Card, Button } from 'antd'\nimport { Input, Tooltip } from 'antd';\nimport { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\n\nclass EditContact extends Component {\n\n  render() {\n    let name, number, email, actionName;\n    let classes = 'edit-contact ';\n    if(this.props.editContact) {\n      classes+= 'yes';\n      name = this.props.editContact.name;\n      number = this.props.editContact.number;\n      email = this.props.editContact.email;\n      actionName = this.props.editContact.actionType === 'ADD' ? \"Добавить\" : \"Изменить\";\n    }\n    const {edit} = this.props;\n    return (\n      <div className={classes} id='edit-contact'>\n        <Card\n          title={actionName + ' Контакт'} /*extra={<a href=\"#\">More</a>}*/\n          style={{ width: 350}}\n          onChange={(e) => this.props.editContactItem(e)}>\n          <Input\n            id=\"name\"\n            className=\"margin\"\n            placeholder=\"Имя\"\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            value={name}\n\n          />\n          <Input\n            type=\"number\"\n            id=\"number\"\n            placeholder=\"Номер\"\n            className=\"margin\"\n            value={number}/>\n          <Input\n            placeholder=\"Email\"\n            type=\"email\"\n            id=\"email\"\n            value={email}/>\n          <div className=\"btn\">\n            <Button\n              type=\"primary\"\n              onClick={() => this.props.editComplete()}>{actionName}</Button>\n            <Button\n              type=\"primary\"\n              onClick={() => this.props.editContactCancel()}>Закрыть</Button>\n          </div>\n        </Card>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    editContactItem: (payload) => dispatch({type: 'EDIT-CONTACT-ITEM', payload}),\n    editComplete: () => dispatch({type: 'EDIT-CONTACT-COMPLETE'}),\n    editContactCancel: () => dispatch({type: 'EDIT-CONTACT-CANCEL'})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContact);\n","import EditContact from './edit-contact';\nexport default EditContact;\n","import React from 'react';\nimport { Input } from 'antd';\n\n\nconst { Search } = Input;\n\nconst SearchPanel = (props) => {\n  const { search } = props;\n  return (\n    <div>\n      <Search\n        placeholder=\"Поиск контакта..\"\n        enterButton=\"Search\"\n        size=\"large\"\n        onSearch={value => search(value)}\n        onChange={(e) => search(e.target.value)}\n      />\n    </div>\n  )\n}\nexport default SearchPanel;\n","import SearchPanel from './search-panel';\nexport default SearchPanel;\n","import React, {Component} from 'react';\nimport { Table, Tag, Button } from 'antd';\nimport { Redirect } from 'react-router-dom';\nimport EditContact from '../edit-contact';\nimport { connect } from 'react-redux';\nimport hocSwapiServiceContext from '../hoc/hoc-swapi-service';\nimport SearchPanel from '../search-panel';\nimport './contacts.css';\n\nclass Contacts extends Component {\n  componentDidMount() {\n    const {getData} = this.props.value;\n    getData()\n      .then((res)=>this.props.load(res))\n      .then(()=>this.props.complete())\n  }\n\n  render() {\n    let data;\n    if(!this.props.login) return <Redirect to='/login'/>;\n    if(this.props.loading) return <h1>Загрузка</h1>\n    this.props.searchContacts.length >= 1 ? data = this.props.searchContacts : data = this.props.contacts;\n    const columns = [\n      {\n        title: 'Имя',\n        dataIndex: 'name',\n        key: 'name',\n        render: text => <a>{text}</a>,\n      },\n      {\n        title: 'Эл. почта',\n        dataIndex: 'email',\n        key: 'email',\n      },\n      {\n        title: 'Номер телефона',\n        dataIndex: 'number',\n        key: 'number',\n      },\n      {\n        title: 'Действия',\n        key: 'action',\n        render: (text, record) => (\n          <span>\n            <a style={{ marginRight: 16}}\n                onClick={() => this.props.edit(text)}>Изменить</a>\n            <a onClick={() => this.props.remove(text)}>Удалить</a>\n          </span>\n        ),\n      },\n    ];\n    return (\n      <div>\n        <SearchPanel search={this.props.search}/>\n        <Button\n          block\n          className=\"button-block\"\n          onClick={()=>this.props.add()}>Добавить контакт</Button>\n        <Table columns={columns} dataSource={data} />\n        <EditContact />\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    edit: (payload) => dispatch({type: 'EDIT-CONTACT', payload}),\n    load: (payload) => dispatch({type: 'LOAD', payload}),\n    complete: () => dispatch({type: 'COMPLETE'}),\n    remove: (payload) => dispatch({type: 'EDIT-CONTACT-REMOVE', payload}),\n    search: (payload) => dispatch({type: 'SEARCH-CONTACTS', payload}),\n    add: () => dispatch({type: 'ADD-CONTACT'}),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(hocSwapiServiceContext(Contacts));\n","import Contacts from './contacts';\nexport default Contacts;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Contacts from '../contacts';\n\nclass HomePage extends Component {\n\n  render() {\n    if(!this.props.login) {\n      return <Redirect to=\"/login\"/>\n    }\n    return <Redirect to=\"/contacts\"/>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state\n  }\n}\n\nexport default connect(mapStateToProps)(HomePage);\n","import App from './app';\nexport default App;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from '../pages/login';\nimport HomePage from '../pages/home';\nimport Contacts from '../contacts';\nimport './app.css'\n\nconst App = (props) => {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/contacts\" component={Contacts} />\n        <Route path=\"/\" component={HomePage} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {SwapiServiceProvider} from './components/swapi-service-context';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ErrorBoundry from './components/error-boundry';\nimport swapiService from  './services/swapi-service';\nimport { store } from './store';\nimport App from './components/app'\n\nlet SwapiService = new swapiService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <SwapiServiceProvider value={SwapiService}>\n        <Router>\n          <App/>\n        </Router>\n      </SwapiServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root')\n);\n","export default class swapiService {\n  users = [\n    {\n      name: 'vasilii',\n      password: 'test'\n    },\n    {\n      name: 'petr',\n      password: 'test',\n    }\n  ]\n data = [\n    {\n      key: '1',\n      name: 'Василий Иванов',\n      email: 'vas@mail.ru',\n      number: '89197777777',\n      tags: ['nice', 'developer'],\n    },\n    {\n      key: '2',\n      name: 'Иван Николаев',\n      email: 'ivan@ivan.ru',\n      number: '89555555555',\n      tags: ['loser'],\n    },\n    {\n      key: '3',\n      name: 'Михаил Снопкин',\n      email: 'mikhail@mikhail.ru',\n      number: '88005553535',\n      tags: ['cool', 'teacher'],\n    },\n    {\n      key: '4',\n      name: 'Кузьма Кузьмин',\n      email: 'kuzma@kuzmin.ru',\n      number: '89999999999',\n      tags: ['cool', 'teacher'],\n    },\n    {\n      key: '5',\n      name: 'Владимир Путевый',\n      email: 'vladimir@vlad.ru',\n      number: '89628887272',\n      tags: ['cool', 'teacher'],\n    },\n  ];\n\n  getUsers = () => {\n    //Имитация сервера\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(this.users), 500);\n    });\n  }\n\n  getData = () => {\n    //Имитация сервера\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(this.data), 500);\n    });\n  }\n}\n"],"sourceRoot":""}